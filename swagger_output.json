{
  "swagger": "2.0",
  "info": {
    "title": "Smart Farm API",
    "description": "API documentation for the Smart Farm project",
    "version": "1.0.0"
  },
  "host": "localhost:3000/api",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/users/": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Endpoint to create a new user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "User data",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "username": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "required": {
                          "type": "boolean",
                          "example": true
                        }
                      }
                    },
                    "email": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "required": {
                          "type": "boolean",
                          "example": true
                        }
                      }
                    },
                    "password": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "required": {
                          "type": "boolean",
                          "example": true
                        }
                      }
                    },
                    "fullName": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "username": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "email": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "fullName": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Validation failed",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "object"
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Failed to create user"
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Endpoint to login a user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "User data",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "username": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "required": {
                          "type": "boolean",
                          "example": true
                        }
                      }
                    },
                    "password": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "required": {
                          "type": "boolean",
                          "example": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User logged in successfully"
          },
          "400": {
            "description": "Validation failed",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "object"
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "User not found or incorrect password"
          },
          "500": {
            "description": "Failed to login user"
          }
        }
      }
    },
    "/users/profile": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "Endpoint to retrieve a user profile",
        "responses": {
          "200": {
            "description": "User profile retrieved successfully"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Failed to retrieve user profile"
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "description": "Endpoint to update a user profile",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Updated user data",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "username": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "required": {
                          "type": "boolean",
                          "example": true
                        }
                      }
                    },
                    "email": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "required": {
                          "type": "boolean",
                          "example": true
                        }
                      }
                    },
                    "password": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "required": {
                          "type": "boolean",
                          "example": true
                        }
                      }
                    },
                    "fullName": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User profile updated successfully"
          },
          "400": {
            "description": "Validation failed",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "object"
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Failed to update user profile"
          }
        }
      }
    },
    "/users/logout": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "Endpoint to logout a user",
        "responses": {
          "200": {
            "description": "User logged out successfully"
          },
          "401": {
            "description": "User not logged in"
          },
          "500": {
            "description": "Failed to logout user"
          }
        }
      }
    },
    "/sensors/": {
      "get": {
        "tags": [
          "Sensors"
        ],
        "description": "Endpoint to retrieve all sensors",
        "responses": {
          "200": {
            "description": "Sensors retrieved successfully"
          },
          "500": {
            "description": "Failed to retrieve sensors"
          }
        }
      },
      "post": {
        "tags": [
          "Sensors"
        ],
        "description": "Endpoint to create a new sensor",
        "responses": {
          "201": {
            "description": "Sensor created successfully"
          },
          "400": {
            "description": "Validation error"
          },
          "500": {
            "description": "Failed to create sensor"
          }
        },
        "requestBody": {
          "required": true,
          "description": "Sensor data to create a new sensor",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/Sensor"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/definitions/Sensor"
              }
            }
          }
        }
      }
    },
    "/sensors/{id}": {
      "get": {
        "tags": [
          "Sensors"
        ],
        "description": "Endpoint to retrieve a sensor by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Sensor ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Sensor retrieved successfully"
          },
          "404": {
            "description": "Sensor not found"
          },
          "500": {
            "description": "Failed to retrieve sensor"
          }
        }
      },
      "put": {
        "tags": [
          "Sensors"
        ],
        "description": "Endpoint to update a sensor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Sensor ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Sensor updated successfully"
          },
          "400": {
            "description": "Validation error"
          },
          "404": {
            "description": "Sensor not found"
          },
          "500": {
            "description": "Failed to update sensor"
          }
        },
        "requestBody": {
          "required": true,
          "description": "Sensor data to update a sensor",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/Sensor"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/definitions/Sensor"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Sensors"
        ],
        "description": "Endpoint to delete a sensor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Sensor ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Sensor deleted successfully"
          },
          "404": {
            "description": "Sensor not found"
          },
          "500": {
            "description": "Failed to delete sensor"
          }
        }
      }
    },
    "/sensors/type/{sensor_type}": {
      "get": {
        "tags": [
          "Sensors"
        ],
        "description": "Endpoint to retrieve sensors by type",
        "parameters": [
          {
            "name": "sensor_type",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Sensor type",
            "enum": [
              "temperature",
              "humidity",
              "light",
              "soil moisture"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Sensors retrieved successfully"
          },
          "404": {
            "description": "Sensors not found"
          },
          "500": {
            "description": "Failed to retrieve sensors"
          }
        }
      }
    }
  }
}