{
  "swagger": "2.0",
  "info": {
    "title": "Smart Farm API",
    "description": "API documentation for the Smart Farm project",
    "version": "1.0.0"
  },
  "host": "localhost:3000",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Register new user",
        "description": "Creates a new user account with email and password",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "User registration data",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "required": {
                  "type": "array",
                  "example": [
                    "email",
                    "password",
                    "username",
                    "fullName"
                  ],
                  "items": {
                    "type": "string"
                  }
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "john.doe@example.com"
                        },
                        "description": {
                          "type": "string",
                          "example": "Valid email address"
                        }
                      }
                    },
                    "password": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "StrongP@ss123"
                        },
                        "description": {
                          "type": "string",
                          "example": "Password (min 8 chars, 1 uppercase, 1 lowercase, 1 number, 1 special)"
                        }
                      }
                    },
                    "username": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "john_doe"
                        },
                        "description": {
                          "type": "string",
                          "example": "Username (3-20 chars, alphanumeric and underscore)"
                        }
                      }
                    },
                    "fullName": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "John Doe"
                        },
                        "description": {
                          "type": "string",
                          "example": "Full name (3-50 characters)"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User registered successfully",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Registration successful"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Validation error",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string",
                  "example": "Validation error"
                },
                "error": {
                  "type": "array",
                  "example": [
                    "Email is required",
                    "Password is too weak"
                  ],
                  "items": {
                    "type": "string"
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Login user",
        "description": "Authenticates user with email and password",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Login credentials",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "required": {
                  "type": "array",
                  "example": [
                    "email",
                    "password"
                  ],
                  "items": {
                    "type": "string"
                  }
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "john.doe@example.com"
                        }
                      }
                    },
                    "password": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "StrongP@ss123"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login successful",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Login successful"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "object",
                      "properties": {
                        "userID": {
                          "type": "string",
                          "example": "SM-00001"
                        },
                        "username": {
                          "type": "string",
                          "example": "john_doe"
                        },
                        "email": {
                          "type": "string",
                          "example": "john.doe@example.com"
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Logout user",
        "description": "Logs out the currently authenticated user and invalidates their session",
        "responses": {
          "200": {
            "description": "Logout successful",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Logged out successfully"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string",
                  "example": "Not authenticated"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/auth/github": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "GitHub OAuth login",
        "description": "Initiates GitHub OAuth authentication flow by redirecting to GitHub login page",
        "responses": {
          "302": {
            "description": "Redirects to GitHub authorization page"
          }
        }
      }
    },
    "/auth/github/callback": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "GitHub OAuth callback",
        "description": "Handles the callback from GitHub OAuth authentication",
        "responses": {
          "302": {
            "description": "Redirects to dashboard on success, login page on failure"
          },
          "400": {
            "description": "OAuth error",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string",
                  "example": "GitHub authentication failed"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/auth/google": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Google OAuth login",
        "description": "Initiates Google OAuth authentication flow by redirecting to Google login page",
        "responses": {
          "302": {
            "description": "Redirects to Google authorization page"
          }
        }
      }
    },
    "/auth/google/callback": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Google OAuth callback",
        "description": "Handles the callback from Google OAuth authentication",
        "responses": {
          "302": {
            "description": "Redirects to dashboard on success, login page on failure"
          },
          "400": {
            "description": "OAuth error",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string",
                  "example": "Google authentication failed"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/users/profile": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get current user profile",
        "description": "Retrieves the complete profile of the currently authenticated user",
        "responses": {
          "200": {
            "description": "User profile retrieved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        },
                        "example": {
                          "type": "boolean",
                          "example": true
                        }
                      }
                    },
                    "message": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "User profile retrieved successfully"
                        }
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "object"
                        },
                        "properties": {
                          "type": "object",
                          "properties": {
                            "_id": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "string"
                                },
                                "example": {
                                  "type": "string",
                                  "example": "507f1f77bcf86cd799439011"
                                }
                              }
                            },
                            "userID": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "string"
                                },
                                "example": {
                                  "type": "string",
                                  "example": "SM-00001"
                                }
                              }
                            },
                            "username": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "string"
                                },
                                "example": {
                                  "type": "string",
                                  "example": "john_doe"
                                }
                              }
                            },
                            "email": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "string"
                                },
                                "example": {
                                  "type": "string",
                                  "example": "john.doe@example.com"
                                }
                              }
                            },
                            "fullName": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "string"
                                },
                                "example": {
                                  "type": "string",
                                  "example": "John Doe"
                                }
                              }
                            },
                            "role": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "string"
                                },
                                "example": {
                                  "type": "string",
                                  "example": "USER"
                                }
                              }
                            },
                            "isVerified": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "boolean"
                                },
                                "example": {
                                  "type": "boolean",
                                  "example": true
                                }
                              }
                            },
                            "bio": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "string"
                                },
                                "example": {
                                  "type": "string",
                                  "example": "Software developer passionate about IoT"
                                }
                              }
                            },
                            "location": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "string"
                                },
                                "example": {
                                  "type": "string",
                                  "example": "New York, USA"
                                }
                              }
                            },
                            "website": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "string"
                                },
                                "example": {
                                  "type": "string",
                                  "example": "https://johndoe.com"
                                }
                              }
                            },
                            "createdAt": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "string"
                                },
                                "example": {
                                  "type": "string",
                                  "example": "2024-01-20T12:00:00Z"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string",
                  "example": "Not authenticated"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update current user profile",
        "description": "Update the profile information of the currently authenticated user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "User profile data to update",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "username": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "john_doe_2024"
                        },
                        "description": {
                          "type": "string",
                          "example": "New username (3-20 characters, alphanumeric and underscore)"
                        }
                      }
                    },
                    "email": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "john.doe@example.com"
                        },
                        "description": {
                          "type": "string",
                          "example": "New email address"
                        }
                      }
                    },
                    "fullName": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "John Robert Doe"
                        },
                        "description": {
                          "type": "string",
                          "example": "Updated full name (3-50 characters)"
                        }
                      }
                    },
                    "bio": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "Software developer with 5 years of experience in IoT"
                        },
                        "description": {
                          "type": "string",
                          "example": "User biography"
                        }
                      }
                    },
                    "website": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "https://johndoe.com"
                        },
                        "description": {
                          "type": "string",
                          "example": "Personal or professional website"
                        }
                      }
                    },
                    "location": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "New York, USA"
                        },
                        "description": {
                          "type": "string",
                          "example": "User location"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users/{userID}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user by ID",
        "description": "Retrieve a specific user by their SM-XXXXX format ID",
        "parameters": [
          {
            "name": "userID",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User ID in SM-XXXXX format",
            "example": "SM-00001"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users/{_id}": {
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete user by ID",
        "description": "Permanently removes a user from the system by their MongoDB _id",
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "MongoDB _id of the user",
            "example": "507f1f77bcf86cd799439011"
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "User deleted successfully"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update user by ID",
        "description": "Updates a user\\'s information by their MongoDB _id",
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "MongoDB _id of the user",
            "example": "507f1f77bcf86cd799439011"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Updated user information",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "username": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "john_doe_updated"
                        }
                      }
                    },
                    "email": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "john.updated@example.com"
                        }
                      }
                    },
                    "fullName": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "John Updated Doe"
                        }
                      }
                    },
                    "role": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "enum": {
                          "type": "array",
                          "example": [
                            "SUPERADMIN",
                            "ADMIN",
                            "USER",
                            "ORG"
                          ],
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "User updated successfully"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "userID": {
                      "type": "string",
                      "example": "SM-00001"
                    },
                    "username": {
                      "type": "string",
                      "example": "john_doe_updated"
                    },
                    "email": {
                      "type": "string",
                      "example": "john.updated@example.com"
                    },
                    "fullName": {
                      "type": "string",
                      "example": "John Updated Doe"
                    },
                    "role": {
                      "type": "string",
                      "example": "USER"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users/": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get all users",
        "description": "Retrieves a list of all users in the system. Requires authentication.",
        "responses": {
          "200": {
            "description": "Users retrieved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Users retrieved successfully"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "example": "507f1f77bcf86cd799439011"
                      },
                      "userID": {
                        "type": "string",
                        "example": "SM-00001"
                      },
                      "username": {
                        "type": "string",
                        "example": "john_doe"
                      },
                      "email": {
                        "type": "string",
                        "example": "john@example.com"
                      },
                      "fullName": {
                        "type": "string",
                        "example": "John Doe"
                      },
                      "role": {
                        "type": "string",
                        "example": "USER"
                      },
                      "isVerified": {
                        "type": "boolean",
                        "example": true
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete all users",
        "description": "Permanently removes all users from the system. Use with caution!",
        "responses": {
          "200": {
            "description": "All users deleted successfully",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "All users deleted successfully"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "deletedCount": {
                      "type": "number",
                      "example": 10
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users/username/{username}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user by username",
        "description": "Retrieves a user by their unique username",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Username to search for",
            "example": "john_doe"
          }
        ],
        "responses": {
          "200": {
            "description": "User retrieved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "User retrieved successfully"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "userID": {
                      "type": "string",
                      "example": "SM-00001"
                    },
                    "username": {
                      "type": "string",
                      "example": "john_doe"
                    },
                    "email": {
                      "type": "string",
                      "example": "john@example.com"
                    },
                    "fullName": {
                      "type": "string",
                      "example": "John Doe"
                    },
                    "role": {
                      "type": "string",
                      "example": "USER"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users/email/{email}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user by email",
        "description": "Retrieves a user by their email address",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Email address to search for",
            "example": "john@example.com"
          }
        ],
        "responses": {
          "200": {
            "description": "User retrieved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "User retrieved successfully"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "userID": {
                      "type": "string",
                      "example": "SM-00001"
                    },
                    "username": {
                      "type": "string",
                      "example": "john_doe"
                    },
                    "email": {
                      "type": "string",
                      "example": "john@example.com"
                    },
                    "fullName": {
                      "type": "string",
                      "example": "John Doe"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users/role/{role}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get users by role",
        "description": "Retrieves all users with a specific role (SUPERADMIN, ADMIN, USER, or ORG)",
        "parameters": [
          {
            "name": "role",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Role to filter users by",
            "enum": [
              "SUPERADMIN",
              "ADMIN",
              "USER",
              "ORG"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Users retrieved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Users retrieved successfully"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "userID": {
                        "type": "string",
                        "example": "SM-00001"
                      },
                      "username": {
                        "type": "string",
                        "example": "john_doe"
                      },
                      "email": {
                        "type": "string",
                        "example": "john@example.com"
                      },
                      "fullName": {
                        "type": "string",
                        "example": "John Doe"
                      },
                      "role": {
                        "type": "string",
                        "example": "USER"
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/sensors/": {
      "get": {
        "tags": [
          "Sensors"
        ],
        "summary": "Get all sensors",
        "description": "Retrieves all sensors in the system",
        "responses": {
          "200": {
            "description": "Sensors retrieved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Sensors retrieved successfully"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "sensor_id": {
                        "type": "string",
                        "example": "sen_0001"
                      },
                      "sensor_name": {
                        "type": "string",
                        "example": "Greenhouse Temperature"
                      },
                      "sensor_type": {
                        "type": "string",
                        "example": "temperature"
                      },
                      "unit": {
                        "type": "string",
                        "example": "°C"
                      },
                      "location": {
                        "type": "string",
                        "example": "Greenhouse Zone A"
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Sensors"
        ],
        "summary": "Create new sensor",
        "description": "Creates a new sensor in the system",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Sensor data",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "required": {
                  "type": "array",
                  "example": [
                    "sensor_id",
                    "sensor_name",
                    "sensor_type"
                  ],
                  "items": {
                    "type": "string"
                  }
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "sensor_id": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "sen_0001"
                        },
                        "description": {
                          "type": "string",
                          "example": "Unique sensor ID (format: sen_XXXX)"
                        }
                      }
                    },
                    "sensor_name": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "Greenhouse Temperature"
                        }
                      }
                    },
                    "sensor_type": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "enum": {
                          "type": "array",
                          "example": [
                            "temperature",
                            "humidity",
                            "light",
                            "soil moisture"
                          ],
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "unit": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "°C"
                        }
                      }
                    },
                    "location": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "Greenhouse Zone A"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/sensors/{sensor_id}": {
      "get": {
        "tags": [
          "Sensors"
        ],
        "summary": "Get sensor by ID",
        "description": "Retrieves a specific sensor by its sen_XXXX format ID",
        "parameters": [
          {
            "name": "sensor_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Sensor ID in sen_XXXX format",
            "example": "sen_0001"
          }
        ],
        "responses": {
          "200": {
            "description": "Sensor retrieved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Sensor retrieved successfully"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "sensor_id": {
                      "type": "string",
                      "example": "sen_0001"
                    },
                    "sensor_name": {
                      "type": "string",
                      "example": "Greenhouse Temperature"
                    },
                    "sensor_type": {
                      "type": "string",
                      "example": "temperature"
                    },
                    "unit": {
                      "type": "string",
                      "example": "°C"
                    },
                    "location": {
                      "type": "string",
                      "example": "Greenhouse Zone A"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/sensors/{_id}": {
      "put": {
        "tags": [
          "Sensors"
        ],
        "summary": "Update sensor",
        "description": "Updates an existing sensor\\'s information by MongoDB _id",
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "MongoDB _id of the sensor",
            "example": "507f1f77bcf86cd799439011"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Updated sensor information",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "sensor_name": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "Updated Temperature Sensor"
                        }
                      }
                    },
                    "unit": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "°F"
                        }
                      }
                    },
                    "location": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "Greenhouse Zone B"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Sensors"
        ],
        "summary": "Delete sensor",
        "description": "Permanently removes a sensor from the system by MongoDB _id",
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "MongoDB _id of the sensor to delete",
            "example": "507f1f77bcf86cd799439011"
          }
        ],
        "responses": {
          "200": {
            "description": "Sensor deleted successfully",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Sensor deleted successfully"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/sensors/type/{sensor_type}": {
      "get": {
        "tags": [
          "Sensors"
        ],
        "summary": "Get sensors by type",
        "description": "Retrieves all sensors of a specific type (temperature, humidity, light, or soil moisture)",
        "parameters": [
          {
            "name": "sensor_type",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Type of sensor to filter by",
            "enum": [
              "temperature",
              "humidity",
              "light",
              "soil moisture"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Sensors retrieved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Sensors retrieved successfully"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "sensor_id": {
                        "type": "string",
                        "example": "sen_0001"
                      },
                      "sensor_name": {
                        "type": "string",
                        "example": "Greenhouse Temperature"
                      },
                      "sensor_type": {
                        "type": "string",
                        "example": "temperature"
                      },
                      "unit": {
                        "type": "string",
                        "example": "°C"
                      },
                      "location": {
                        "type": "string",
                        "example": "Greenhouse Zone A"
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  }
}